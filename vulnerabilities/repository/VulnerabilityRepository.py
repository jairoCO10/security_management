from typing import List
from datetime import datetime
from vulnerabilities.models import Vulnerability as ORMVulnerability
from django.utils.dateparse import parse_datetime  # Asegúrate de importar esta función si es la que usas
from django.db.models import Count
from fixedVulnerability.models import FixedVulnerability as ORMFixed

class VulnerabilityRepository:
    
    def __init__(self) -> None:
        pass
    
    def get_vulnerability(self)->List[ORMVulnerability]:
        return  ORMVulnerability.objects.all()
    
    
    def get_count_vulnerability(self) -> List[dict]:
        return ORMVulnerability.objects.values('severity').annotate(count=Count('severity')).order_by('-count')
    

    def get_queryset(self)->List[ORMVulnerability]:
        fixed_cves = ORMFixed.objects.values_list('cve_id', flat=True)
     
        return ORMVulnerability.objects.exclude(cve_id__in=fixed_cves)
    



    async def create_vulnerability(self, cve_id: str, source_identifier: str, published: datetime,
                                   last_modified: datetime, vuln_status: str, description_en: str,
                                   description_es: str, severity: str, base_score: float,
                                   exploitability_score: float, impact_score: float) -> ORMVulnerability:

        repository = ORMVulnerability.objects.update_or_create(
            cve_id=cve_id,
            source_identifier= source_identifier,
            published= published,
            last_modified=last_modified,
            vuln_status = vuln_status,
            description_en= description_en,
            description_es =description_es,
            severity= severity,
            base_score =base_score , 
            exploitability_score= exploitability_score,
            impact_score = impact_score,
            )
        
        return repository
    
   

from typing import List
from vulnerabilities.entities.VulnerabilityEntities import Vulnerability, CreateVulnerability
from datetime import datetime
from vulnerabilities.repository.VulnerabilityRepository import VulnerabilityRepository


class VulnerabilityGateway:
    def __init__(self) -> None:
        self.vulrepository_repository = VulnerabilityRepository()
    
    def get_vulnerability(self)->List[Vulnerability]:
        orm_vulnerabilities = self.vulrepository_repository.get_vulnerability()
        vulnerability = []
        for orm_vulnerability in orm_vulnerabilities:

            vulnerability.append(Vulnerability(cve_id = orm_vulnerability.cve_id,
                                    source_identifier = orm_vulnerability.source_identifier, 
                                    published= orm_vulnerability.published, 
                                    last_modified= orm_vulnerability.last_modified, 
                                    vuln_status=orm_vulnerability.vuln_status, 
                                    description_en= orm_vulnerability.description_en, 
                                    description_es=orm_vulnerability.description_es,
                                    severity= orm_vulnerability.severity,
                                    base_score=orm_vulnerability.base_score,
                                    exploitability_score=orm_vulnerability.exploitability_score,
                                    impact_score=orm_vulnerability.impact_score,
                                    created_at= orm_vulnerability.created_at))
        return vulnerability


    async def create_vulnerability(self, cve_id: str,
        source_identifier: str, published: datetime,
        last_modified: datetime, vuln_status: str,
        description_en: str, description_es: str,
        severity: str, base_score: float,
        exploitability_score: float,impact_score: float) -> CreateVulnerability:

        orm_vulnerability = await self.vulrepository_repository.create_vulnerability(cve_id, source_identifier, published, last_modified, vuln_status, 
                                                   description_en, description_es, severity, base_score, exploitability_score,
                                                   impact_score)
        
        
        return CreateVulnerability(cve_id = orm_vulnerability.cve_id,
                                    source_identifier = orm_vulnerability.source_identifier, 
                                    published= orm_vulnerability.published, 
                                    last_modified= orm_vulnerability.last_modified, 
                                    vuln_status=orm_vulnerability.vuln_status, 
                                    description_en= orm_vulnerability.description_en, 
                                    description_es=orm_vulnerability.description_es,
                                    severity= orm_vulnerability.severity,
                                    base_score=orm_vulnerability.base_score,
                                    exploitability_score=orm_vulnerability.exploitability_score,
                                    impact_score=orm_vulnerability.impact_score)
    
    